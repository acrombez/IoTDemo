{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "deploymentId": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location of the Cluster"
      }
    },
    "clusterName": {
      "type": "string",
      "metadata": {
        "description": "Name of your cluster - Between 3 and 23 characters. Letters and numbers only"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Remote desktop user Id"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Remote desktop user password. Must be a strong password"
      }
    },
    "certificateThumbprint": {
      "type": "string",
      "metadata": {
        "description": "Certificate Thumbprint"
      }
    },
    "sourceVaultResourceId": {
      "type": "string",
      "metadata": {
        "description": "Resource Id of the key vault, is should be in the format of /subscriptions/<Sub ID>/resourceGroups/<Resource group name>/providers/Microsoft.KeyVault/vaults/<vault name>"
      }
    },
    "certificateUrlValue": {
      "type": "string",
      "metadata": {
        "description": "Refers to the location URL in your key vault where the certificate was uploaded, it is should be in the format of https://<name of the vault>.vault.azure.net:443/secrets/<exact location>"
      }
    },
    "serviceBusNamespaceName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Service Bus namespace"
      }
    },
    "iotHubName": {
      "type": "string",
      "minLength": 3,
      "metadata": {
        "description": "Name of the IoT Hub instance to provision."
      }
    },
    "_artifactsLocation": {
      "type": "string"
    },
    "_artifactsSAS": {
      "type": "string"
    },
    "tenantId":{
      "type": "string"
    },
    "clusterApplication":{
      "type": "string"
    },
    "clientApplication":{
      "type": "string"
    },
    "cosmosdatabaseAccountName": {
      "type": "string",
      "metadata": {
        "description": "The MongoDB database account name. Needs to be globally unique."
      }
    }
  },
  "variables": {
    "deployclusterTemplateFolder": "nestedtemplates",
    "deployclusterTemplateFileName": "azuredeploy.cluster.json",
    "deploysbTemplateFileName": "azuredeploy.servicebus.json",
    "deployiothubTemplateFileName": "azuredeploy.iothub.json",
    "deploycosmosTemplateFileName": "azuredeploy.cosmos.json",
    "omsWorkspacename": "[concat(parameters('clustername'), 'oms')]",
    "omsRegion" : "[parameters('location')]",
    "applicationDiagnosticsStorageAccountType": "Standard_LRS",
    "applicationDiagnosticsStorageAccountName": "[toLower(concat('oms', uniqueString(resourceGroup().id), '3' ))]"
  },
  "resources": [
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('applicationDiagnosticsStorageAccountName')]",
      "location": "[parameters('location')]",
      "properties": {
        "accountType": "[variables('applicationDiagnosticsStorageAccountType')]"
      },
      "tags": {
        "resourceType": "Service Fabric",
        "clusterName": "[parameters('clusterName')]"
      }
    },
    {
      "apiVersion": "2017-04-26-preview",
      "location": "[variables('omsRegion')]",
      "name": "[variables('omsWorkspacename')]",
      "type": "Microsoft.OperationalInsights/workspaces",
      "properties": {
          "sku": {
              "name": "Free"
          }
      },
      "resources": [
          {
              "apiVersion": "2017-04-26-preview",
              "name": "[concat(variables('applicationDiagnosticsStorageAccountName'),variables('omsWorkspacename'))]",
              "type": "storageinsightconfigs",
              "dependsOn": [
                  "[resourceId('Microsoft.OperationalInsights/workspaces/', variables('omsWorkspacename'))]",
                  "[concat('Microsoft.Storage/storageAccounts/', variables('applicationDiagnosticsStorageAccountName'))]"
              ],
              "properties": {
                  "containers": [ ],
                  "tables": [
                      "WADServiceFabric*EventTable",
                      "WADWindowsEventLogsTable",
                      "WADETWEventTable"
                  ],
                  "storageAccount": {
                      "id": "[resourceId('Microsoft.Storage/storageaccounts/', variables('applicationDiagnosticsStorageAccountName'))]",
                      "key": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('applicationDiagnosticsStorageAccountName')),'2015-06-15').key1]"
                  }
              }
          }
      ]
    },
    {
      "name": "deploycluster",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-09-01",
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces/', variables('omsWorkspacename'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('applicationDiagnosticsStorageAccountName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/', variables('deployclusterTemplateFolder'), '/', variables('deployclusterTemplateFileName'), parameters('_artifactsSAS'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "clusterName": { "value": "[parameters('clusterName')]" },
          "adminUsername": { "value": "[parameters('adminUsername')]" },
          "adminPassword": { "value": "[parameters('adminPassword')]" },
          "certificateThumbprint": { "value": "[parameters('certificateThumbprint')]" },
          "sourceVaultResourceId": { "value": "[parameters('sourceVaultResourceId')]" },
          "certificateUrlValue": { "value": "[parameters('certificateUrlValue')]" },
          "tenantId": { "value": "[parameters('tenantId')]" },
          "clusterApplication": { "value": "[parameters('clusterApplication')]" },
          "clientApplication": { "value": "[parameters('clientApplication')]" },
          "omsWorkspacename": {"value": "[variables('omsWorkspacename')]"},
          "omsRegion": {"value": "[variables('omsRegion')]"},
          "applicationDiagnosticsStorageAccountName" : {"value": "[variables('applicationDiagnosticsStorageAccountName')]"}
        }
      }
    },
    {
      "name": "deployservicebus",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-09-01",
      "dependsOn": [],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/', variables('deployclusterTemplateFolder'), '/', variables('deploysbTemplateFileName'), parameters('_artifactsSAS'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "serviceBusNamespaceName": { "value": "[parameters('serviceBusNamespaceName')]" }
        }
      }
    },
    {
      "name": "deployiothub",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-09-01",
      "dependsOn": [],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/', variables('deployclusterTemplateFolder'), '/', variables('deployiothubTemplateFileName'), parameters('_artifactsSAS'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "iotHubName": { "value": "[parameters('iotHubName')]" },
          "skuName": {"value": "S1"}
        }
      }
    },
    {
      "name": "deploycosmos",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-09-01",
      "dependsOn": [],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/', variables('deployclusterTemplateFolder'), '/', variables('deploycosmosTemplateFileName'), parameters('_artifactsSAS'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "databaseAccountName": { "value": "[parameters('cosmosdatabaseAccountName')]" }
        }
      }
    }
  ]
}